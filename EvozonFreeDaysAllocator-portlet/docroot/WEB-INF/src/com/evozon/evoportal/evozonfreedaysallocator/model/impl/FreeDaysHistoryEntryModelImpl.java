/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.evozon.evoportal.evozonfreedaysallocator.model.impl;

import com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry;
import com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntryModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the FreeDaysHistoryEntry service. Represents a row in the &quot;BenefitDay_FreeDaysHistoryEntry&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FreeDaysHistoryEntryImpl}.
 * </p>
 *
 * @author Cristina Kiss
 * @see FreeDaysHistoryEntryImpl
 * @see com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry
 * @see com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntryModel
 * @generated
 */
public class FreeDaysHistoryEntryModelImpl extends BaseModelImpl<FreeDaysHistoryEntry>
	implements FreeDaysHistoryEntryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a free days history entry model instance should use the {@link com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry} interface instead.
	 */
	public static final String TABLE_NAME = "BenefitDay_FreeDaysHistoryEntry";
	public static final Object[][] TABLE_COLUMNS = {
			{ "entryId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "operation", Types.VARCHAR },
			{ "oldValue", Types.INTEGER },
			{ "daysNo", Types.INTEGER },
			{ "newValue", Types.INTEGER },
			{ "createDate", Types.TIMESTAMP },
			{ "eventType", Types.VARCHAR },
			{ "description", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table BenefitDay_FreeDaysHistoryEntry (entryId LONG not null primary key,userId LONG,operation VARCHAR(75) null,oldValue INTEGER,daysNo INTEGER,newValue INTEGER,createDate DATE null,eventType VARCHAR(75) null,description VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table BenefitDay_FreeDaysHistoryEntry";
	public static final String ORDER_BY_JPQL = " ORDER BY freeDaysHistoryEntry.createDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BenefitDay_FreeDaysHistoryEntry.createDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry"),
			true);
	public static long CREATEDATE_COLUMN_BITMASK = 1L;
	public static long EVENTTYPE_COLUMN_BITMASK = 2L;
	public static long OPERATION_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry"));

	public FreeDaysHistoryEntryModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return FreeDaysHistoryEntry.class;
	}

	public String getModelClassName() {
		return FreeDaysHistoryEntry.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("entryId", getEntryId());
		attributes.put("userId", getUserId());
		attributes.put("operation", getOperation());
		attributes.put("oldValue", getOldValue());
		attributes.put("daysNo", getDaysNo());
		attributes.put("newValue", getNewValue());
		attributes.put("createDate", getCreateDate());
		attributes.put("eventType", getEventType());
		attributes.put("description", getDescription());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long entryId = (Long)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String operation = (String)attributes.get("operation");

		if (operation != null) {
			setOperation(operation);
		}

		Integer oldValue = (Integer)attributes.get("oldValue");

		if (oldValue != null) {
			setOldValue(oldValue);
		}

		Integer daysNo = (Integer)attributes.get("daysNo");

		if (daysNo != null) {
			setDaysNo(daysNo);
		}

		Integer newValue = (Integer)attributes.get("newValue");

		if (newValue != null) {
			setNewValue(newValue);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		String eventType = (String)attributes.get("eventType");

		if (eventType != null) {
			setEventType(eventType);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}
	}

	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public String getOperation() {
		if (_operation == null) {
			return StringPool.BLANK;
		}
		else {
			return _operation;
		}
	}

	public void setOperation(String operation) {
		_columnBitmask |= OPERATION_COLUMN_BITMASK;

		if (_originalOperation == null) {
			_originalOperation = _operation;
		}

		_operation = operation;
	}

	public String getOriginalOperation() {
		return GetterUtil.getString(_originalOperation);
	}

	public int getOldValue() {
		return _oldValue;
	}

	public void setOldValue(int oldValue) {
		_oldValue = oldValue;
	}

	public int getDaysNo() {
		return _daysNo;
	}

	public void setDaysNo(int daysNo) {
		_daysNo = daysNo;
	}

	public int getNewValue() {
		return _newValue;
	}

	public void setNewValue(int newValue) {
		_newValue = newValue;
	}

	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		if (_originalCreateDate == null) {
			_originalCreateDate = _createDate;
		}

		_createDate = createDate;
	}

	public Date getOriginalCreateDate() {
		return _originalCreateDate;
	}

	public String getEventType() {
		if (_eventType == null) {
			return StringPool.BLANK;
		}
		else {
			return _eventType;
		}
	}

	public void setEventType(String eventType) {
		_columnBitmask |= EVENTTYPE_COLUMN_BITMASK;

		if (_originalEventType == null) {
			_originalEventType = _eventType;
		}

		_eventType = eventType;
	}

	public String getOriginalEventType() {
		return GetterUtil.getString(_originalEventType);
	}

	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	public void setDescription(String description) {
		_description = description;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			FreeDaysHistoryEntry.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public FreeDaysHistoryEntry toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (FreeDaysHistoryEntry)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		FreeDaysHistoryEntryImpl freeDaysHistoryEntryImpl = new FreeDaysHistoryEntryImpl();

		freeDaysHistoryEntryImpl.setEntryId(getEntryId());
		freeDaysHistoryEntryImpl.setUserId(getUserId());
		freeDaysHistoryEntryImpl.setOperation(getOperation());
		freeDaysHistoryEntryImpl.setOldValue(getOldValue());
		freeDaysHistoryEntryImpl.setDaysNo(getDaysNo());
		freeDaysHistoryEntryImpl.setNewValue(getNewValue());
		freeDaysHistoryEntryImpl.setCreateDate(getCreateDate());
		freeDaysHistoryEntryImpl.setEventType(getEventType());
		freeDaysHistoryEntryImpl.setDescription(getDescription());

		freeDaysHistoryEntryImpl.resetOriginalValues();

		return freeDaysHistoryEntryImpl;
	}

	public int compareTo(FreeDaysHistoryEntry freeDaysHistoryEntry) {
		int value = 0;

		value = DateUtil.compareTo(getCreateDate(),
				freeDaysHistoryEntry.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		FreeDaysHistoryEntry freeDaysHistoryEntry = null;

		try {
			freeDaysHistoryEntry = (FreeDaysHistoryEntry)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = freeDaysHistoryEntry.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		FreeDaysHistoryEntryModelImpl freeDaysHistoryEntryModelImpl = this;

		freeDaysHistoryEntryModelImpl._originalUserId = freeDaysHistoryEntryModelImpl._userId;

		freeDaysHistoryEntryModelImpl._setOriginalUserId = false;

		freeDaysHistoryEntryModelImpl._originalOperation = freeDaysHistoryEntryModelImpl._operation;

		freeDaysHistoryEntryModelImpl._originalCreateDate = freeDaysHistoryEntryModelImpl._createDate;

		freeDaysHistoryEntryModelImpl._originalEventType = freeDaysHistoryEntryModelImpl._eventType;

		freeDaysHistoryEntryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<FreeDaysHistoryEntry> toCacheModel() {
		FreeDaysHistoryEntryCacheModel freeDaysHistoryEntryCacheModel = new FreeDaysHistoryEntryCacheModel();

		freeDaysHistoryEntryCacheModel.entryId = getEntryId();

		freeDaysHistoryEntryCacheModel.userId = getUserId();

		freeDaysHistoryEntryCacheModel.operation = getOperation();

		String operation = freeDaysHistoryEntryCacheModel.operation;

		if ((operation != null) && (operation.length() == 0)) {
			freeDaysHistoryEntryCacheModel.operation = null;
		}

		freeDaysHistoryEntryCacheModel.oldValue = getOldValue();

		freeDaysHistoryEntryCacheModel.daysNo = getDaysNo();

		freeDaysHistoryEntryCacheModel.newValue = getNewValue();

		Date createDate = getCreateDate();

		if (createDate != null) {
			freeDaysHistoryEntryCacheModel.createDate = createDate.getTime();
		}
		else {
			freeDaysHistoryEntryCacheModel.createDate = Long.MIN_VALUE;
		}

		freeDaysHistoryEntryCacheModel.eventType = getEventType();

		String eventType = freeDaysHistoryEntryCacheModel.eventType;

		if ((eventType != null) && (eventType.length() == 0)) {
			freeDaysHistoryEntryCacheModel.eventType = null;
		}

		freeDaysHistoryEntryCacheModel.description = getDescription();

		String description = freeDaysHistoryEntryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			freeDaysHistoryEntryCacheModel.description = null;
		}

		return freeDaysHistoryEntryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{entryId=");
		sb.append(getEntryId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", operation=");
		sb.append(getOperation());
		sb.append(", oldValue=");
		sb.append(getOldValue());
		sb.append(", daysNo=");
		sb.append(getDaysNo());
		sb.append(", newValue=");
		sb.append(getNewValue());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", eventType=");
		sb.append(getEventType());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append(
			"com.evozon.evoportal.evozonfreedaysallocator.model.FreeDaysHistoryEntry");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>operation</column-name><column-value><![CDATA[");
		sb.append(getOperation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>oldValue</column-name><column-value><![CDATA[");
		sb.append(getOldValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>daysNo</column-name><column-value><![CDATA[");
		sb.append(getDaysNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>newValue</column-name><column-value><![CDATA[");
		sb.append(getNewValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>eventType</column-name><column-value><![CDATA[");
		sb.append(getEventType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = FreeDaysHistoryEntry.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			FreeDaysHistoryEntry.class
		};
	private long _entryId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private String _operation;
	private String _originalOperation;
	private int _oldValue;
	private int _daysNo;
	private int _newValue;
	private Date _createDate;
	private Date _originalCreateDate;
	private String _eventType;
	private String _originalEventType;
	private String _description;
	private long _columnBitmask;
	private FreeDaysHistoryEntry _escapedModelProxy;
}