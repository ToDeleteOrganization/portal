/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.evozon.evoportal.evozonfreedaysallocator.model.impl;

import com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay;
import com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BenefitDay service. Represents a row in the &quot;BenefitDay_BenefitDay&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BenefitDayImpl}.
 * </p>
 *
 * @author Cristina Kiss
 * @see BenefitDayImpl
 * @see com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay
 * @see com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayModel
 * @generated
 */
public class BenefitDayModelImpl extends BaseModelImpl<BenefitDay>
	implements BenefitDayModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a benefit day model instance should use the {@link com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay} interface instead.
	 */
	public static final String TABLE_NAME = "BenefitDay_BenefitDay";
	public static final Object[][] TABLE_COLUMNS = {
			{ "entryId", Types.BIGINT },
			{ "type_", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "daysNo", Types.INTEGER },
			{ "allocatedDate", Types.TIMESTAMP },
			{ "comment_", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table BenefitDay_BenefitDay (entryId LONG not null primary key,type_ VARCHAR(75) null,userId LONG,daysNo INTEGER,allocatedDate DATE null,comment_ VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table BenefitDay_BenefitDay";
	public static final String ORDER_BY_JPQL = " ORDER BY benefitDay.type ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BenefitDay_BenefitDay.type_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay"),
			true);
	public static long TYPE_COLUMN_BITMASK = 1L;
	public static long USERID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay"));

	public BenefitDayModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return BenefitDay.class;
	}

	public String getModelClassName() {
		return BenefitDay.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("entryId", getEntryId());
		attributes.put("type", getType());
		attributes.put("userId", getUserId());
		attributes.put("daysNo", getDaysNo());
		attributes.put("allocatedDate", getAllocatedDate());
		attributes.put("comment", getComment());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long entryId = (Long)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Integer daysNo = (Integer)attributes.get("daysNo");

		if (daysNo != null) {
			setDaysNo(daysNo);
		}

		Date allocatedDate = (Date)attributes.get("allocatedDate");

		if (allocatedDate != null) {
			setAllocatedDate(allocatedDate);
		}

		String comment = (String)attributes.get("comment");

		if (comment != null) {
			setComment(comment);
		}
	}

	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	public void setType(String type) {
		_columnBitmask = -1L;

		if (_originalType == null) {
			_originalType = _type;
		}

		_type = type;
	}

	public String getOriginalType() {
		return GetterUtil.getString(_originalType);
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public int getDaysNo() {
		return _daysNo;
	}

	public void setDaysNo(int daysNo) {
		_daysNo = daysNo;
	}

	public Date getAllocatedDate() {
		return _allocatedDate;
	}

	public void setAllocatedDate(Date allocatedDate) {
		_allocatedDate = allocatedDate;
	}

	public String getComment() {
		if (_comment == null) {
			return StringPool.BLANK;
		}
		else {
			return _comment;
		}
	}

	public void setComment(String comment) {
		_comment = comment;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BenefitDay.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BenefitDay toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (BenefitDay)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		BenefitDayImpl benefitDayImpl = new BenefitDayImpl();

		benefitDayImpl.setEntryId(getEntryId());
		benefitDayImpl.setType(getType());
		benefitDayImpl.setUserId(getUserId());
		benefitDayImpl.setDaysNo(getDaysNo());
		benefitDayImpl.setAllocatedDate(getAllocatedDate());
		benefitDayImpl.setComment(getComment());

		benefitDayImpl.resetOriginalValues();

		return benefitDayImpl;
	}

	public int compareTo(BenefitDay benefitDay) {
		int value = 0;

		value = getType().compareTo(benefitDay.getType());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		BenefitDay benefitDay = null;

		try {
			benefitDay = (BenefitDay)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = benefitDay.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BenefitDayModelImpl benefitDayModelImpl = this;

		benefitDayModelImpl._originalType = benefitDayModelImpl._type;

		benefitDayModelImpl._originalUserId = benefitDayModelImpl._userId;

		benefitDayModelImpl._setOriginalUserId = false;

		benefitDayModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BenefitDay> toCacheModel() {
		BenefitDayCacheModel benefitDayCacheModel = new BenefitDayCacheModel();

		benefitDayCacheModel.entryId = getEntryId();

		benefitDayCacheModel.type = getType();

		String type = benefitDayCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			benefitDayCacheModel.type = null;
		}

		benefitDayCacheModel.userId = getUserId();

		benefitDayCacheModel.daysNo = getDaysNo();

		Date allocatedDate = getAllocatedDate();

		if (allocatedDate != null) {
			benefitDayCacheModel.allocatedDate = allocatedDate.getTime();
		}
		else {
			benefitDayCacheModel.allocatedDate = Long.MIN_VALUE;
		}

		benefitDayCacheModel.comment = getComment();

		String comment = benefitDayCacheModel.comment;

		if ((comment != null) && (comment.length() == 0)) {
			benefitDayCacheModel.comment = null;
		}

		return benefitDayCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(13);

		sb.append("{entryId=");
		sb.append(getEntryId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", daysNo=");
		sb.append(getDaysNo());
		sb.append(", allocatedDate=");
		sb.append(getAllocatedDate());
		sb.append(", comment=");
		sb.append(getComment());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(22);

		sb.append("<model><model-name>");
		sb.append(
			"com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDay");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>daysNo</column-name><column-value><![CDATA[");
		sb.append(getDaysNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>allocatedDate</column-name><column-value><![CDATA[");
		sb.append(getAllocatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comment</column-name><column-value><![CDATA[");
		sb.append(getComment());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BenefitDay.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			BenefitDay.class
		};
	private long _entryId;
	private String _type;
	private String _originalType;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private int _daysNo;
	private Date _allocatedDate;
	private String _comment;
	private long _columnBitmask;
	private BenefitDay _escapedModelProxy;
}