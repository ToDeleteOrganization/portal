/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.evozon.evoportal.evozonfreedaysallocator.model.impl;

import com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue;
import com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueueModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BenefitDayQueue service. Represents a row in the &quot;BenefitDay_BenefitDayQueue&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueueModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BenefitDayQueueImpl}.
 * </p>
 *
 * @author Cristina Kiss
 * @see BenefitDayQueueImpl
 * @see com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue
 * @see com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueueModel
 * @generated
 */
public class BenefitDayQueueModelImpl extends BaseModelImpl<BenefitDayQueue>
	implements BenefitDayQueueModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a benefit day queue model instance should use the {@link com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue} interface instead.
	 */
	public static final String TABLE_NAME = "BenefitDay_BenefitDayQueue";
	public static final Object[][] TABLE_COLUMNS = {
			{ "entryId", Types.BIGINT },
			{ "type_", Types.VARCHAR },
			{ "userId", Types.BIGINT },
			{ "daysNo", Types.INTEGER },
			{ "queued", Types.BOOLEAN },
			{ "addedDate", Types.TIMESTAMP },
			{ "allocatedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table BenefitDay_BenefitDayQueue (entryId LONG not null primary key,type_ VARCHAR(75) null,userId LONG,daysNo INTEGER,queued BOOLEAN,addedDate DATE null,allocatedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table BenefitDay_BenefitDayQueue";
	public static final String ORDER_BY_JPQL = " ORDER BY benefitDayQueue.type ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BenefitDay_BenefitDayQueue.type_ ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue"),
			true);
	public static long ALLOCATEDDATE_COLUMN_BITMASK = 1L;
	public static long QUEUED_COLUMN_BITMASK = 2L;
	public static long TYPE_COLUMN_BITMASK = 4L;
	public static long USERID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue"));

	public BenefitDayQueueModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return BenefitDayQueue.class;
	}

	public String getModelClassName() {
		return BenefitDayQueue.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("entryId", getEntryId());
		attributes.put("type", getType());
		attributes.put("userId", getUserId());
		attributes.put("daysNo", getDaysNo());
		attributes.put("queued", getQueued());
		attributes.put("addedDate", getAddedDate());
		attributes.put("allocatedDate", getAllocatedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long entryId = (Long)attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		String type = (String)attributes.get("type");

		if (type != null) {
			setType(type);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Integer daysNo = (Integer)attributes.get("daysNo");

		if (daysNo != null) {
			setDaysNo(daysNo);
		}

		Boolean queued = (Boolean)attributes.get("queued");

		if (queued != null) {
			setQueued(queued);
		}

		Date addedDate = (Date)attributes.get("addedDate");

		if (addedDate != null) {
			setAddedDate(addedDate);
		}

		Date allocatedDate = (Date)attributes.get("allocatedDate");

		if (allocatedDate != null) {
			setAllocatedDate(allocatedDate);
		}
	}

	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	public String getType() {
		if (_type == null) {
			return StringPool.BLANK;
		}
		else {
			return _type;
		}
	}

	public void setType(String type) {
		_columnBitmask = -1L;

		if (_originalType == null) {
			_originalType = _type;
		}

		_type = type;
	}

	public String getOriginalType() {
		return GetterUtil.getString(_originalType);
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public int getDaysNo() {
		return _daysNo;
	}

	public void setDaysNo(int daysNo) {
		_daysNo = daysNo;
	}

	public boolean getQueued() {
		return _queued;
	}

	public boolean isQueued() {
		return _queued;
	}

	public void setQueued(boolean queued) {
		_columnBitmask |= QUEUED_COLUMN_BITMASK;

		if (!_setOriginalQueued) {
			_setOriginalQueued = true;

			_originalQueued = _queued;
		}

		_queued = queued;
	}

	public boolean getOriginalQueued() {
		return _originalQueued;
	}

	public Date getAddedDate() {
		return _addedDate;
	}

	public void setAddedDate(Date addedDate) {
		_addedDate = addedDate;
	}

	public Date getAllocatedDate() {
		return _allocatedDate;
	}

	public void setAllocatedDate(Date allocatedDate) {
		_columnBitmask |= ALLOCATEDDATE_COLUMN_BITMASK;

		if (_originalAllocatedDate == null) {
			_originalAllocatedDate = _allocatedDate;
		}

		_allocatedDate = allocatedDate;
	}

	public Date getOriginalAllocatedDate() {
		return _originalAllocatedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			BenefitDayQueue.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public BenefitDayQueue toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (BenefitDayQueue)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		BenefitDayQueueImpl benefitDayQueueImpl = new BenefitDayQueueImpl();

		benefitDayQueueImpl.setEntryId(getEntryId());
		benefitDayQueueImpl.setType(getType());
		benefitDayQueueImpl.setUserId(getUserId());
		benefitDayQueueImpl.setDaysNo(getDaysNo());
		benefitDayQueueImpl.setQueued(getQueued());
		benefitDayQueueImpl.setAddedDate(getAddedDate());
		benefitDayQueueImpl.setAllocatedDate(getAllocatedDate());

		benefitDayQueueImpl.resetOriginalValues();

		return benefitDayQueueImpl;
	}

	public int compareTo(BenefitDayQueue benefitDayQueue) {
		int value = 0;

		value = getType().compareTo(benefitDayQueue.getType());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		BenefitDayQueue benefitDayQueue = null;

		try {
			benefitDayQueue = (BenefitDayQueue)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = benefitDayQueue.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		BenefitDayQueueModelImpl benefitDayQueueModelImpl = this;

		benefitDayQueueModelImpl._originalType = benefitDayQueueModelImpl._type;

		benefitDayQueueModelImpl._originalUserId = benefitDayQueueModelImpl._userId;

		benefitDayQueueModelImpl._setOriginalUserId = false;

		benefitDayQueueModelImpl._originalQueued = benefitDayQueueModelImpl._queued;

		benefitDayQueueModelImpl._setOriginalQueued = false;

		benefitDayQueueModelImpl._originalAllocatedDate = benefitDayQueueModelImpl._allocatedDate;

		benefitDayQueueModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<BenefitDayQueue> toCacheModel() {
		BenefitDayQueueCacheModel benefitDayQueueCacheModel = new BenefitDayQueueCacheModel();

		benefitDayQueueCacheModel.entryId = getEntryId();

		benefitDayQueueCacheModel.type = getType();

		String type = benefitDayQueueCacheModel.type;

		if ((type != null) && (type.length() == 0)) {
			benefitDayQueueCacheModel.type = null;
		}

		benefitDayQueueCacheModel.userId = getUserId();

		benefitDayQueueCacheModel.daysNo = getDaysNo();

		benefitDayQueueCacheModel.queued = getQueued();

		Date addedDate = getAddedDate();

		if (addedDate != null) {
			benefitDayQueueCacheModel.addedDate = addedDate.getTime();
		}
		else {
			benefitDayQueueCacheModel.addedDate = Long.MIN_VALUE;
		}

		Date allocatedDate = getAllocatedDate();

		if (allocatedDate != null) {
			benefitDayQueueCacheModel.allocatedDate = allocatedDate.getTime();
		}
		else {
			benefitDayQueueCacheModel.allocatedDate = Long.MIN_VALUE;
		}

		return benefitDayQueueCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{entryId=");
		sb.append(getEntryId());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", daysNo=");
		sb.append(getDaysNo());
		sb.append(", queued=");
		sb.append(getQueued());
		sb.append(", addedDate=");
		sb.append(getAddedDate());
		sb.append(", allocatedDate=");
		sb.append(getAllocatedDate());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append(
			"com.evozon.evoportal.evozonfreedaysallocator.model.BenefitDayQueue");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>daysNo</column-name><column-value><![CDATA[");
		sb.append(getDaysNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>queued</column-name><column-value><![CDATA[");
		sb.append(getQueued());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addedDate</column-name><column-value><![CDATA[");
		sb.append(getAddedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>allocatedDate</column-name><column-value><![CDATA[");
		sb.append(getAllocatedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = BenefitDayQueue.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			BenefitDayQueue.class
		};
	private long _entryId;
	private String _type;
	private String _originalType;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private int _daysNo;
	private boolean _queued;
	private boolean _originalQueued;
	private boolean _setOriginalQueued;
	private Date _addedDate;
	private Date _allocatedDate;
	private Date _originalAllocatedDate;
	private long _columnBitmask;
	private BenefitDayQueue _escapedModelProxy;
}